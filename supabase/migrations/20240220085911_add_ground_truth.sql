
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE SCHEMA IF NOT EXISTS "public";

ALTER SCHEMA "public" OWNER TO "pg_database_owner";

CREATE TYPE "public"."ENUM_Column_type" AS ENUM (
    'GROUND_TRUTH',
    'PREDICTIVE_LABEL',
    'INPUT'
);

ALTER TYPE "public"."ENUM_Column_type" OWNER TO "postgres";

CREATE TYPE "public"."ENUM_Data_type" AS ENUM (
    'STRING',
    'NUMBER',
    'DATE'
);

ALTER TYPE "public"."ENUM_Data_type" OWNER TO "postgres";

CREATE TYPE "public"."ENUM_Ground_truth_status" AS ENUM (
    'PENDING',
    'APPROVED'
);

ALTER TYPE "public"."ENUM_Ground_truth_status" OWNER TO "postgres";

CREATE TYPE "public"."ENUM_User_action" AS ENUM (
    'DATASET_UPLOADED',
    'DATASET_DOWNLOADED',
    'COLUMN_MARKED',
    'ROW_MARKED',
    'DATASET_RENAMED',
    'DATASET_DELETED',
    'COLUMN_DELETED'
);

ALTER TYPE "public"."ENUM_User_action" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."Dataset" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "file_name" "text" NOT NULL,
    "file_location" "text" NOT NULL,
    "file_type" "text" NOT NULL,
    "file_size" bigint NOT NULL,
    "total_rows" bigint NOT NULL,
    "deleted_at" timestamp with time zone
);

ALTER TABLE "public"."Dataset" OWNER TO "postgres";

CREATE TABLE IF NOT EXISTS "public"."Dataset_column" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "dataset_id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "dataType" "public"."ENUM_Data_type" NOT NULL,
    "type" "public"."ENUM_Column_type" NOT NULL,
    "deleted_at" timestamp with time zone,
    "index" bigint NOT NULL
);

ALTER TABLE "public"."Dataset_column" OWNER TO "postgres";

ALTER TABLE "public"."Dataset_column" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Dataset_column_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE "public"."Dataset" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Dataset_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Ground_truth_cell" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "index" bigint NOT NULL,
    "status" "public"."ENUM_Ground_truth_status" NOT NULL,
    "content" "text" NOT NULL,
    "column_id" bigint NOT NULL
);

ALTER TABLE "public"."Ground_truth_cell" OWNER TO "postgres";

ALTER TABLE "public"."Ground_truth_cell" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Ground_truth_cell_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."Log_user_action" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" bigint,
    "action" "public"."ENUM_User_action" NOT NULL
);

ALTER TABLE "public"."Log_user_action" OWNER TO "postgres";

ALTER TABLE "public"."Log_user_action" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."Log_user_action_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."Dataset_column"
    ADD CONSTRAINT "Dataset_column_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Dataset"
    ADD CONSTRAINT "Dataset_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Ground_truth_cell"
    ADD CONSTRAINT "Dataset_row_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Log_user_action"
    ADD CONSTRAINT "Log_user_action_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."Dataset_column"
    ADD CONSTRAINT "Dataset_column_dataset_id_fkey" FOREIGN KEY ("dataset_id") REFERENCES "public"."Dataset"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE ONLY "public"."Ground_truth_cell"
    ADD CONSTRAINT "Ground_truth_cell_column_id_fkey" FOREIGN KEY ("column_id") REFERENCES "public"."Dataset_column"("id") ON UPDATE CASCADE ON DELETE CASCADE;

ALTER TABLE "public"."Dataset" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Dataset_column" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Ground_truth_cell" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."Log_user_action" ENABLE ROW LEVEL SECURITY;

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."Dataset" TO "anon";
GRANT ALL ON TABLE "public"."Dataset" TO "authenticated";
GRANT ALL ON TABLE "public"."Dataset" TO "service_role";

GRANT ALL ON TABLE "public"."Dataset_column" TO "anon";
GRANT ALL ON TABLE "public"."Dataset_column" TO "authenticated";
GRANT ALL ON TABLE "public"."Dataset_column" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Dataset_column_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Dataset_column_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Dataset_column_id_seq" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Dataset_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Dataset_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Dataset_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Ground_truth_cell" TO "anon";
GRANT ALL ON TABLE "public"."Ground_truth_cell" TO "authenticated";
GRANT ALL ON TABLE "public"."Ground_truth_cell" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Ground_truth_cell_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Ground_truth_cell_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Ground_truth_cell_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."Log_user_action" TO "anon";
GRANT ALL ON TABLE "public"."Log_user_action" TO "authenticated";
GRANT ALL ON TABLE "public"."Log_user_action" TO "service_role";

GRANT ALL ON SEQUENCE "public"."Log_user_action_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."Log_user_action_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."Log_user_action_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
