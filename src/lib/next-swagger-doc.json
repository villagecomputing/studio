{
    "apiFolder": "src/app/api",
    "definition": {
      "openapi": "3.0.0",
      "info": {
        "title": "Labelkit Studio API - OpenAPI 3.0",
        "version": "1.0"
      },
    "components": {
        "securitySchemes": {
            "ApiKeyAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "x-api-key"
            }
        },
        "schemas": {
            "AddDataPayload": {
                "type": "object",
                "properties": {
                    "datasetRows": {
                        "type":"array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "properties": {
                            "fingerprint": {
                                "type": "string"
                            }
                        },
                        "required": ["fingerprint"],
                        "description": "The rows to be added to the dataset. The dictionary objects inside the array must have the same keys and must always include the 'fingerprint' key. Each dictionary represents a row, whose keys represent the dataset columns, and contain the values to be added",
                        "example": [{
                                "Column1": "Value1",
                                "Column2": "Value2"
                            }, {
                                "Column1": "Value3",
                                "Column2": "Value4"
                        }]
                    }
                }
            },      
            "AddDataResponse": {
                "type": "object",
                "properties": {
                    "rowsAdded": {
                        "type": "number"
                    }
                }
            },                   
            "DatasetViewResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "Tue May 07 2024"
                    },
                    "name": {
                        "type": "string"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TableColumnProps"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DatasetRow"
                        }
                    }
                },
                "required": ["id", "created_at", "name", "columns", "rows"]
            },
            "TableColumnProps": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The dataset column name (display name)."
                    },
                    "id": {
                        "type": "number"
                    },
                    "field": {
                        "type": "string",
                        "description": "The column name of the dynamically generated dataset table."
                    },
                    "type": {
                        "type": "string",
                        "enum":  ["IDENTIFIER", "GROUND_TRUTH", "GROUND_TRUTH_STATUS", "INPUT" ]
                    }
                },
                "required": ["name", "id", "field", "type"]
            },
            "DatasetRow": {
                "type": "object",
                "additionalProperties": {
                    "type": "string"
                },
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "id": {
                        "type": "number"
                    },
                    "status": {
                        "type": "string",
                        "enum": ["PENDING", "APPROVED"]
                    }
                },
                "example": {
                    "Column1": "string",
                    "Column2": {
                        "content": "string",
                        "id": 0,
                        "status": "PENDING"
                    }
                }
            },  
            "NewDatasetPayload": {
                "type": "object",
                "properties": {
                    "datasetName": {
                        "type": "string",
                        "description": "The name of the dataset to be created."
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The name of input columns of the dataset to be created."
                    },
                    "groundTruths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The name of ground truth columns of the dataset to be created."
                    }
                },
                "required": ["datasetName", "columns", "rows"]
            },
            "NewDatasetResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The dataset Id. The combination of dataset name and dataset uuid.",
                        "example": "Dataset_Name-d-4d71fa65-6e01-475b-a924-b078195f8498"
                    }
                },
                "required": ["id"]
            },
            "UploadDatasetPayload": {
                "type": "object",
                "properties": {
                    "datasetData": {
                        "type": "object",
                        "properties": {
                            "datasetTitle": {
                                "type": "string",
                                "description": "The title of the dataset"
                            },
                            "groundTruthColumnIndex": {
                                "type": "integer",
                                "description": "Index of the ground truth column"
                            },
                            "blankColumnTitle": {
                                "type": "string",
                                "description": "Title for an optional blank column",
                                "nullable": true
                            }
                        },
                        "required": ["datasetTitle", "groundTruthColumnIndex"],
                        "description": "Object containing the dataset title, ground truth column index, and an optional blank column title"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "description": "The binary content of the dataset file"
                    }
                },
                "required": ["datasetData", "file"]
            },
            "DatasetListResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "uuid": {
                            "type": "string",
                            "description": "The dataset uuid",
                            "example": "d-4d71fa65-6e01-475b-a924-b078195f8498"
                        },
                        "id": {
                            "type": "string",
                            "description": "The dataset Id. The combination of dataset name and dataset uuid.",
                            "example": "Dataset_Name-d-4d71fa65-6e01-475b-a924-b078195f8498"
                        },
                        "name": {
                            "type": "string"
                        },
                        "created_at": {
                            "type": "string",
                            "example": "Tue May 07 2024"
                        },
                        "total_rows": {
                            "type": "integer",
                            "description": "The number of rows a dataset has."
                        }
                    },
                    "required": ["id", "name", "created_at", "total_rows"]
                }
            },
            "ApproveAllGroundTruthsPayload": {
                "type": "object",
                "properties": {
                    "datasetId": {
                        "type": "string",
                        "description": "The dataset Id. The combination of dataset name and dataset uuid.",
                        "example": "Dataset_Name-d-4d71fa65-6e01-475b-a924-b078195f8498"
                    }
                },
                "required": ["datasetId"]
            },
            "EditCellPayload": {
                "type": "object",
                "required": ["datasetId", "rowId"],
                "oneOf": [
                    {
                        "properties": {
                            "datasetId": {
                                "type": "string",
                                "description": "The dataset Id. The combination of dataset name and dataset uuid.",
                                "example": "Dataset_Name-d-4d71fa65-6e01-475b-a924-b078195f8498"
                            },
                            "rowId": {
                                "type": "integer",
                                "description": "The row Id for which the ground truth cell will be changed."
                            },
                            "content": {
                                "type": "string",
                                "nullable": true,
                                "description": "If provided, must contain the new value of the ground truth cell. Status will automatically be set to approved "
                            }
                        }
                    },
                    {
                        "properties": {
                            "datasetId": {
                                "type": "string",
                                "description": "The dataset Id. The combination of dataset name and dataset uuid.",
                                "example": "Dataset_Name-d-4d71fa65-6e01-475b-a924-b078195f8498"
                            },
                            "rowId": {
                                "type": "integer",
                                "description": "The row Id for which the ground truth cell will be changed."
                            },
                            "status": {
                                "type": "string",
                                "enum": ["PENDING", "APPROVED"],
                                "nullable": true,
                                "description": "If provided, must contain the new state of the ground truth cell. Default value is APPROVED."
                            }
                        }
                    }
                ]
            },
            "EditGroundTruthCellResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    }
                },
                "required": ["id"]
            },
            "ExperimentViewResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The experiment Id. The combination of experiment name and experiment uuid.",
                        "example": "Experiment_Name-e-3964f3dd-23e0-4bfe-9f1e-b72774e4b1ea"
                    },
                    "name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "example": "Tue May 07 2024"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExperimentTableColumnPropsSchema"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "dataset": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            }
                        },
                        "description": "The dataset used as input for this experiment"
                    },
                    "latencyP50": {
                        "type": "number",
                        "description": "The median percentile latency in seconds."
                    },
                    "latencyP90": {
                        "type": "number",
                        "description": "The 90th percentile latency in seconds."
                    },
                    "runtime": {
                        "type": "number",
                        "description": "The total experiment runtime in seconds."
                    },
                    "cost": {
                        "type": "number",
                        "description": "The total experiment cost."
                    },
                    "accuracy": {
                        "type": "number",
                        "description": "The experiment accuracy as a percentage."
                    },
                    "parameters": {
                        "type": "string",
                        "description": "The pipeline metadata JSON as a string."
                    }
                },
                "required": ["id", "name", "created_at", "columns", "rows", "dataset"]
            },
            "ExperimentTableColumnPropsSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of final output, intermediary output, or metadata type columns of the experiment."
                    },
                    "id": {
                        "type": "number"
                    },
                    "field": {
                        "type": "string",
                        "description": "The column name of the dynamically generated experiment table."
                    },
                    "type": {
                        "type": "string",
                        "enum": ["IDENTIFIER", "OUTPUT", "INTERMEDIARY_OUTPUT", "METADATA"]
                    }
                },
                "required": ["name", "id", "field", "type"]
            },
            "ExperimentInsertPayload": {
                "type": "object",
                "properties": {                    
                    "accuracy": {
                        "type": "number",
                        "nullable": true,
                        "description": "The experiment output accuracy as a percentage."
                    },
                    "dataset_row_fingerprint": {
                        "type": "string",
                        "description": "The dataset row fingerprint associated with the experiment output."
                    },
                    "final_output_columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The final output columns of the experiment"
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ExperimentStepPayload"
                        }
                    }
                },
                "required": ["steps", "dataset_row_fingerprint"]
            },
            "ExperimentStepPayload": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The step name"
                  },
                  "metadata": {
                    "$ref": "#/components/schemas/ExperimentStepMetadata",
                    "description": "The step metadata in JSON format."
                  },
                  "outputs": {
                    "type": "array",
                    "description": "An array of step output names and values.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "required": ["name", "value"]
                    }
                  }
                },
                "required": ["name", "metadata", "outputs"]
            },
            "ExperimentStepMetadata": {
                "type": "object",
                "properties": {
                    "latency": {
                        "type": "number",
                        "description": "The latency of the step."
                    },
                    "success": {
                        "type": "boolean"
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "input_tokens": {
                        "type": "number",
                        "nullable": true
                    },
                    "output_tokens": {
                        "type": "number",
                        "nullable": true
                    },
                    "input_cost": {
                        "type": "number",
                        "nullable": true
                    },
                    "output_cost": {
                        "type": "number",
                        "nullable": true
                    },
                    "prompt": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": ["latency", "success"]
            },
            "NewExperimentPayload": {
                "type": "object",
                "properties": {
                    "datasetId": {
                        "type": "string",
                        "description": "The dataset Id. The combination of dataset name and dataset uuid.",
                        "example": "Dataset_Name-d-4d71fa65-6e01-475b-a924-b078195f8498"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the experiment to be created."
                    },
                    "groupId": {
                        "type": "string",
                        "description": "The group id of an experiment."
                    },
                    "description": {
                        "type": "string",
                        "nullable": true,
                        "description": "The description of the experiment to be created."
                    },
                    "parameters": {
                        "type": "object",
                        "additionalProperties": true,
                        "description": "The pipeline metadata in JSON format."
                    }
                },
                "required": ["name", "datasetId", "parameters", "groupId"]
            },
            "NewExperimentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The experiment Id. The combination of experiment name and experiment uuid.",
                        "example": "Experiment_Name-e-3964f3dd-23e0-4bfe-9f1e-b72774e4b1ea"
                    }
                },
                "required": ["id"]
            },
            "ListExperimentResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "The experiment Id. The combination of experiment name and experiment uuid.",
                            "example": "Experiment_Name-e-3964f3dd-23e0-4bfe-9f1e-b72774e4b1ea"
                        },
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string",
                            "nullable": true
                        },
                        "created_at": {
                            "type": "string",
                            "example": "Tue May 07 2024"
                        },
                        "groupId": {
                            "type": "integer",
                            "description": "The group id of an experiment"
                        },
                        "pipelineMetadata": {
                            "type": "string",
                            "description": "The pipeline metadata of an experiment as JSON."
                        },
                        "latencyP50": {
                            "type": "number",
                            "description": "The median percentile latency in seconds."
                        },
                        "latencyP90": {
                            "type": "number",
                            "description": "The 90th percentile latency in seconds."
                        },
                        "runtime": {
                            "type": "number",
                            "description": "The total runtime/latency of an experiment in seconds."
                        },
                        "totalCost": {
                            "type": "number",
                            "description": "The total cost of an experiment."
                        },
                        "avgAccuracy": {
                            "type": "number",
                            "description": "The average accuracy of an experiment."
                        },
                        "totalRows": {
                            "type": "number",
                            "description": "The total number of rows of an experiment."
                        },
                        "Dataset": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                }
                            },
                            "description": "The datasets used as input for an experiment.",
                            "required": ["id", "name"]
                        }
                    },
                    "required": ["id", "name", "created_at", "groupId", "pipelineMetadata", "latencyP50", "latencyP90", "runtime", "totalCost", "avgAccuracy", "totalRows", "Dataset"]
                }
            },         
            "ListLogsResponse": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string",
                            "description": "The logs Id. The combination of logs name and logs uuid.",
                            "example": "Logs_Name-l-48a3beac-33c1-4c1e-87af-b598029fd42e"
                        },
                        "name": {
                            "type": "string"
                        },
                        "description": {
                            "type": "string",
                            "nullable": true
                        },
                        "createdAt": {
                            "type": "string",
                            "example": "Tue May 07 2024"
                        },
                        "pipelineMetadata": {
                            "type": "string",
                            "description": "The pipeline metadata a dynamic logs table as JSON."
                        },
                        "latencyP50": {
                            "type": "number",
                            "description": "The median percentile latency a dynamic logs table in seconds."
                        },
                        "latencyP90": {
                            "type": "number",
                            "description": "The 90th percentile latency a dynamic logs table in seconds. "
                        },
                        "runtime": {
                            "type": "number",
                            "description": "The total runtime/latency in seconds of a dynamic logs table."
                        },
                        "totalCost": {
                            "type": "number",
                            "description": "The total cost from dynamic logs table."
                        },
                        "avgAccuracy": {
                            "type": "number",
                            "description": "The average accuracy of a dynamic logs table."
                        },
                        "totalRows": {
                            "type": "number",
                            "description": "The total number of rows from a dynamic logs table."
                        }
                    },
                    "required": [
                        "id",
                        "name",
                        "createdAt",
                        "pipelineMetadata",
                        "latencyP50",
                        "latencyP90",
                        "runtime",
                        "totalCost",
                        "avgAccuracy",
                        "totalRows"
                    ]
                }
            },
            "LogsInsertPayload": {
                "type": "object",
                "properties": {
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExperimentStepPayload"
                        }
                    },
                    "final_output_columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The final output columns of the logs."
                    },
                    "accuracy": {
                        "type": "number",
                        "nullable": true,
                        "description": "The accuracy of the logs."
                    },
                    "inputs": {
                        "type": "array",
                        "description": "An array of logs input names and values.",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                }
                            },
                            "required": [
                                "name",
                                "value"
                            ]
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "parameters": {
                        "type": "object",
                        "description": "The pipeline metadata in JSON format."
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "An unique identifier used to decide if a new dynamic logs table should be created or if an existing one should be used to insert into. Can have any value."
                    }
                },
                "required": [
                  "steps",
                  "inputs",
                  "name",
                  "parameters",
                  "fingerprint"
                ]
            },
            "LogsViewResponse": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",                    
                    "description": "The logs Id. The combination of logs name and logs uuid.",
                    "example": "Logs_Name-l-48a3beac-33c1-4c1e-87af-b598029fd42e"
                  },
                  "createdAt": {
                    "type": "string",
                    "example": "Tue May 07 2024"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "columns": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LogsTableColumnProps"
                    }
                  },
                  "rows": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": "The logs data."
                },
                  "latencyP50": {
                    "type": "number",
                    "description": "The median percentile latency of the logs in seconds."
                  },
                  "latencyP90": {
                    "type": "number",
                    "description": "The 90th percentile latency of the logs in seconds."
                  },
                  "runtime": {
                    "type": "number",
                    "description": "The total runtime/latency of the logs in seconds."
                  },
                  "cost": {
                    "type": "number",
                    "description": "The total cost of the logs."
                  },
                  "accuracy": {
                    "type": "number",
                    "description": "The accuracy of the logs."
                  },
                  "parameters": {
                    "type": "string",
                    "description": "The pipeline metadata JSON as a string."
                  },
                  "costP25": {
                    "type": "number",
                    "description": "The 25th percentile cost."
                  },
                  "costP75": {
                    "type": "number",
                    "description": "The 75th percentile cost."
                  },
                  "latencyP25": {
                    "type": "number",
                    "description": "The 25th percentile latency of the logs in seconds."
                  },
                  "latencyP75": {
                    "type": "number",
                    "description": "The 75th percentile latency of the logs in seconds."
                  },
                  "datasetUuid": {
                    "type": "string",
                    "description": "The dataset uuid where the logs are copied to."
                  }
                },
                "required": [
                  "id",
                  "createdAt",
                  "name",
                  "columns",
                  "rows",
                  "latencyP50",
                  "latencyP90",
                  "runtime",
                  "cost",
                  "accuracy",
                  "parameters",
                  "costP25",
                  "costP75",
                  "latencyP25",
                  "latencyP75"
                ]
            },
            "LogsTableColumnProps": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The logs column name (display name)."
                  },
                  "id": {
                    "type": "number"
                  },
                  "field": {
                    "type": "string",
                    "description": "The column name of the dynamically generated dataset table."
                  },
                  "type": {
                    "type": "string",
                    "enum": ["IDENTIFIER", "OUTPUT", "INTERMEDIARY_OUTPUT", "METADATA", "INPUT", "STEP_METADATA", "TIMESTAMP"]
                  }
                },
                "required": ["name", "id", "field", "type"]
            },
            "DeleteUserPayload": {
                "type": "object",
                "oneOf": [
                    {
                        "properties": {
                            "id": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    },
                    {
                        "properties": {
                            "userExternalId": {
                                "type": "string",
                                "nullable": true
                            }
                        }
                    }
                ]
            },
            "UserRevokeApiKeyPayload": {
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string",
                        "description": "The API Key to revoke access to."
                    }
                },
                "required": ["api_key"]
            },
            "LogsToDatasetPayloadSchema": {
                "type": "object",
                "properties": {
                    "datasetName": {
                        "type": "string",
                        "description":"The dataset name the logs will be copied to."
                    },
                    "logRowIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description":"The logs row ids to be copied.",
                        "example": ["1","2","3" ]
                    }
                },
                "required": ["datasetName", "logRowIds"]
            },
            "LogsToDatasetViewResponse": {
                "type": "object",
                "properties": {
                    "datasetUuid": {
                        "type": "string",
                        "description": "The dataset uuid where the logs were copied.",
                        "example": "d-4d71fa65-6e01-475b-a924-b078195f8498"
                    },
                    "logsUuid": {
                        "type": "string",
                        "description": "The logs uuid where the rows were copied from.",
                        "example": "l-48a3beac-33c1-4c1e-87af-b598029fd42e"
                    },
                    "logRowsToDatasetRows": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "logs_row_id": {
                                    "type": "integer",
                                    "description": "The logs row id that was copied."
                                },
                                "id": {
                                    "type": "string",
                                    "description": "The dataset row id where the logs row was copied."
                                }
                            },
                            "required": ["logs_row_id", "id"]
                        }
                    }
                },
                "required": ["datasetUuid", "logsUuid", "logRowsToDatasetRows"]
            }
        }
    },
    "tags":[
        {
            "name":"Dataset",
            "description": "Operations related to datasets including listing, creating, populating and retrieving datasets, approving ground truths, editing cells and columns"
        },
        {
            "name":"Experiment",
            "description": "Operations related to experiments including creating, updating, retrieving and listing experiments"
        },
        {
            "name":"User",
            "description": "Operations related to user including creating, getting user data, permissions and API keys operations"
        },
        {
            "name":"Logs",
            "description": "Operations related to logs including creating, getting, listing log data and copying to dataset"
        }
      ]
    }
}
